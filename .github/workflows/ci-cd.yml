name: CI/CD Pipeline

# Grant write permissions to repository contents
permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=${latest_tag}" >> $GITHUB_ENV
          echo "latest_tag=${latest_tag}" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:${{ steps.get_latest_tag.outputs.latest_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:latest

      - name: Set version for next job
        id: set_version
        run: |
          echo "version=${{ steps.get_latest_tag.outputs.latest_tag }}" >> $GITHUB_OUTPUT

  update-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Update Deployment Manifest
      run: |
        sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:${{ needs.build-and-push.outputs.version }}|g" deployment.yaml

    - name: Commit Changes
      run: |
        git add deployment.yaml
        git commit -m "Update Weather app to version ${{ needs.build-and-push.outputs.version }}" || echo "No changes to commit"

    - name: Push Changes
      run: |
        git push origin main

    - name: Debug Final State
      if: always()
      run: |
        echo "Final Git Status:"
        git status
        echo "Final Branch List:"
        git branch -a
