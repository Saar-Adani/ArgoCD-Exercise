name: Build and Push Docker Image

# Grant write permissions to repository contents
permissions:
  contents: write
  
# Trigger the workflow on push to main or on tag creation
on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Adjust the pattern as needed (e.g., 'release-*')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all history is fetched for tag information

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Determine if the trigger is a tag (release) or a push to main
      - name: Determine Trigger Type
        id: determine_trigger
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "IS_TAG=true" >> $GITHUB_ENV
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            echo "IS_TAG=false" >> $GITHUB_ENV
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      # 5. Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:${{ env.VERSION }}

      # 6. Update deployment.yaml if triggered by a tag (release)
      - name: Update deployment.yaml with New Image Tag
        if: env.IS_TAG == 'true'
        run: |
          # Install yq for YAML processing
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

          # Update the image tag in deployment.yaml
          yq eval '.spec.template.spec.containers[].image = ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:'"${VERSION}"'"' -i deployment.yaml

      # 7. Commit and Push the Updated deployment.yaml back to main
      - name: Commit and Push Changes
        if: env.IS_TAG == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update deployment.yaml to image version ${{ env.VERSION }}"
          branch: main
          file_pattern: deployment.yaml
          github_token: ${{ secrets.GITHUB_TOKEN }}
