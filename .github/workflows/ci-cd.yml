name: CI/CD Pipeline

# Grant write permissions to repository contents
permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Triggers on tags starting with 'v'
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      # 1. Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up QEMU for multi-platform builds (optional, remove if not needed)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Extract version from Git tag (if push is a tag)
      - name: Extract version from Git tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')

      # 6. Set version for push (default to 'latest' if not a tag)
      - name: Set version for push
        id: set_version
        run: |
          if [ -z "${VERSION}" ]; then
            VERSION=latest
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      # 7. Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:${{ steps.set_version.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:latest

  update-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout main branch
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0  # Fetch all history for all branches and tags

      # 2. Configure Git with user details
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3. Update Deployment Manifest with the new image tag
      - name: Update Deployment Manifest
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:${{ needs.build-and-push.outputs.version }}|g" deployment.yaml

      # 4. Commit the changes if there are any
      - name: Commit Changes
        run: |
          git add deployment.yaml
          git commit -m "Update Weather app to version ${{ needs.build-and-push.outputs.version }}" || echo "No changes to commit"

      # 5. Push the committed changes back to the main branch
      - name: Push Changes
        run: |
          git push origin main
